openapi: 3.0.0   # Open api version

info:
  title: SoongsilBERT-nsmc
  version: "v0.1"
  contact:
    name: AInizer - Lee hoseop
  description: |
    This app is generate everytime community style korean text using GPT-2 model.
    ---
      How to use:
      * First, Fill what the character will say in text. This will be base of script.
      * Second, Choose text style category.
      * And then, Fill number in length. Text is created as long as "length". I recommend between 100 and 300.
      * If length is so big, generate time will be long.
    ---
    And you can use this in [demo page](https://master-gpt2-everytime-fpem123.endpoint.ainize.ai/).

    Original github >> [jason9693/UCK-GPT2](https://github.com/jason9693/UCK-GPT2)

    Original colab >> [Colab](https://colab.research.google.com/drive/1p6DIxsesi3eJNPwFwvMw0MeM5LkSGoPW?usp=sharing&fbclid=IwAR1kejoqnhL738Za3M_BsGnjjJrayGq5AG3hH8UUBX3dRwCK6JvT4loZ88A#scrollTo=fJWeAhLF7rdh)

servers:
  - url: https://master-gpt2-everytime-fpem123.endpoint.ainize.ai/

paths:
  /everytime/natural:
    post:
      requestBody:
        required: true
        description: |
          This request will generate everytime community style korean text using GPT-2 model.

          Request body example

              text: 님들 오늘 수업
              category: 숭실대 에타
              length: 200

          curl example

              curl -X POST "https://master-gpt2-everytime-fpem123.endpoint.ainize.ai/everytime/natural" -H "accept: application/json" -H "Content-Type: multipart/form-data" -F "text=님들 오늘 수업" -F "category=숭실대 에타" -F "length=200"

        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: "The base of generated text."
                category:
                  type: string
                  enum: [대학생 잡담방, 숭실대 에타, 모두의 연애]
                  description: "The text style category."
                length:
                  type: string
                  description: "The max size of generated text."
              required:
                - category
                - text
                - length
      responses:   # Set response
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                type: object
        '400':
          description: "Bad Request Error"
        '429':
          description: "Too many requests"
        '500':
          description: "Server-side Error"

  /everytime/fix-length:
    post:
      requestBody:
        required: true
        description: |
          This request will generate everytime community style korean text using GPT-2 model.

          Request body example

              text: 님들 오늘 수업
              category: 대학생 잡담방
              length: 200

          curl example

              curl -X POST "https://master-gpt2-everytime-fpem123.endpoint.ainize.ai/everytime/fix-length:" -H "accept: application/json" -H "Content-Type: multipart/form-data" -F "text=님들 오늘 수업" -F "category=대학생 잡담방" -F "length=200"

        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: "The base of generated text."
                category:
                  type: string
                  enum: [대학생 잡담방, 숭실대 에타, 모두의 연애]
                  description: "The text style category."
                length:
                  type: string
                  description: "The size of generated ext."
              required:
                - category
                - text
                - length
      responses:   # Set response
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                type: object
        '400':
          description: "Bad Request Error"
        '429':
          description: "Too many requests"
        '500':
          description: "Server-side Error"